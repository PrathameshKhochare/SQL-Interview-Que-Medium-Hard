/* Leetcode Prob 6 - User purchase platform.
-- The table logs the spendings history of users that make purchases from an online shopping website which 
has a desktop and a mobile application.
-- Write an SQL query to find the total number of users and the total amount spent using mobile only,
desktop only and both mobile and desktop together for each date.
*/
=============
drop table spending
create table spending 
(
user_id varchar(19),
spend_date date,
platform varchar(10),
amount int
);

insert into spending values(1,'2019-07-01','mobile',100),(1,'2019-07-01','desktop',100),(2,'2019-07-01','mobile',100)
,(2,'2019-07-02','mobile',100),(3,'2019-07-01','desktop',100),(3,'2019-07-02','desktop',100);

/*
o/p
spend_date       platform  count  total_spend
"2019-07-01"	"mobile"	   1	100
"2019-07-01"	"desktop"	   1	100
"2019-07-01"	"both"	       1	200
"2019-07-02"	"mobile"	   1	100
"2019-07-02"	"desktop"	   1	100
"2019-07-02"	"both"	       0	  0
*/
--------------------------
select * from spending;


/*
Above data has for day 2019-07-01 , user_id 1 has purchased from both platforms of amount 200 while user_id 2 has purchased from mobile and 3 has purchased from desktop
for day 2019-07-02 , no user has purchased from both platform , while user_id 2 has purchased from mobile and 3 has purchased from desktop

we use union to solve this query
we 1st group data by user_id ,spend_date and check count(distinct platgorm) , if count(distinct platgorm) = 1 means all records for single platform purchase 
   and count(distinct platgorm) = 2 means records for both platform purchase
*/
---Ans
with all_spend as (
		select spend_date, user_id ,max(platform) as platform ,sum(amount) as total_spend --,count(platform) 
		from spending
		group by user_id , spend_date
		having count(distinct platform) = 1
		
union all 
        select spend_date, user_id ,'both' as platform ,sum(amount) as total_spend --,count(platform) 
		from spending
		group by user_id , spend_date
		having count(distinct platform) = 2
		
union all
	    select distinct spend_date ,null as user_id ,'both' as platform , 0 as total_spend --,count(platform) 
		from spending
		
)
select spend_date , platform , count(user_id) as total_users , sum(total_spend) as total_purchase
from all_spend
group by spend_date , platform
order by spend_date , platform desc

---------------- another approach 
-- we use count() window function to get count(distinct platform) by date and user_id , give platform name as 'both' when count = 2 else platfrom_name
	

   select  count(distinct user_id) as total_users , spend_date
	, CASE WHEN COUNT(distinct platform) = 2 then 'both' else max(platform) end as platform , sum(amount) as total_purchase
   from spending
   group by user_id , spend_date
union
  select 0 as total_users , spend_date , 'both' as platform , 0 as total_purchase
  from spending
group by spend_date	
having count(distinct user_id)	= count(user_id)
order by spend_date, total_users desc


-------------------------- end