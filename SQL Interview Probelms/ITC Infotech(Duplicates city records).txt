/*ITC Ifotech SQL Interview que
Remove duplicates - in case of source,dest, distance are same then keep the 1st records only
*/
CREATE TABLE city_distance
(
    distance INT,
    source VARCHAR(512),
    destination VARCHAR(512)
);

delete from city_distance;
INSERT INTO city_distance(distance, source, destination) VALUES ('100', 'New Delhi', 'Panipat');
INSERT INTO city_distance(distance, source, destination) VALUES ('200', 'Ambala', 'New Delhi');
INSERT INTO city_distance(distance, source, destination) VALUES ('150', 'Bangalore', 'Mysore');
INSERT INTO city_distance(distance, source, destination) VALUES ('150', 'Mysore', 'Bangalore');
INSERT INTO city_distance(distance, source, destination) VALUES ('250', 'Mumbai', 'Pune');
INSERT INTO city_distance(distance, source, destination) VALUES ('250', 'Pune', 'Mumbai');
INSERT INTO city_distance(distance, source, destination) VALUES ('2500', 'Chennai', 'Bhopal');
INSERT INTO city_distance(distance, source, destination) VALUES ('2500', 'Bhopal', 'Chennai');
INSERT INTO city_distance(distance, source, destination) VALUES ('60', 'Tirupati', 'Tirumala');
INSERT INTO city_distance(distance, source, destination) VALUES ('80', 'Tirumala', 'Tirupati');

select * from city_distance


---- Ans
---- (using left join )
with duplicates_cte as (
select c1.* ,c2.distance as dist, row_number() over(partition by c1.distance) as rn
from city_distance c1
left join city_distance c2
on c1.source = c2.destination and c1.destination = c2.source and c1.distance = c2.distance
	)
select distance , source , destination
from duplicates_cte
where dist is null or rn = 1

-------------- (using ASCII value concept)
with cte as (
select * , case when source < destination then source else destination end as city1
            , case when source < destination then destination else source end as city2
			, row_number() over(partition by distance ,case when source < destination then source else destination end) as rn
from city_distance 
)
select distance , source , destination
from cte where rn =1

------------------ (using rank())
with cte as (
	select * , row_number() over(order by null) as rn
	from city_distance
	)
select c1.distance , c1.source , c1.destination
from cte c1
left join cte c2
on c1.source = c2.destination and c1.destination = c2.source 
where c2.distance is null or c1.distance != c2.distance or c1.rn < c2.rn

--------------------------- end
