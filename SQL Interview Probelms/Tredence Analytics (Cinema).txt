-- Q. Interview que - Tredence Analytics
-- Q. Find consecutive available seats in Cinema hall

script:
CREATE TABLE cinema (
    seat_id INT PRIMARY KEY,
    free int
);
delete from cinema;

INSERT INTO cinema (seat_id, free) VALUES (1, 1);
INSERT INTO cinema (seat_id, free) VALUES (2, 0);
INSERT INTO cinema (seat_id, free) VALUES (3, 1);
INSERT INTO cinema (seat_id, free) VALUES (4, 1);
INSERT INTO cinema (seat_id, free) VALUES (5, 1);
INSERT INTO cinema (seat_id, free) VALUES (6, 0);
INSERT INTO cinema (seat_id, free) VALUES (7, 1);
INSERT INTO cinema (seat_id, free) VALUES (8, 1);
INSERT INTO cinema (seat_id, free) VALUES (9, 0);
INSERT INTO cinema (seat_id, free) VALUES (10, 1);
INSERT INTO cinema (seat_id, free) VALUES (11, 0);
INSERT INTO cinema (seat_id, free) VALUES (12, 1);
INSERT INTO cinema (seat_id, free) VALUES (13, 0);
INSERT INTO cinema (seat_id, free) VALUES (14, 1);
INSERT INTO cinema (seat_id, free) VALUES (15, 1);
INSERT INTO cinema (seat_id, free) VALUES (16, 0);
INSERT INTO cinema (seat_id, free) VALUES (17, 1);
INSERT INTO cinema (seat_id, free) VALUES (18, 1);
INSERT INTO cinema (seat_id, free) VALUES (19, 1);
INSERT INTO cinema (seat_id, free) VALUES (20, 1);

select * from cinema

---- Ans (using grouping data by free= 1)
with cte as (
		select * ,  seat_id -  row_number() over(order by seat_id) as grp
		from
		(
		select * 
		from cinema
		)x
		where free = 1
)
,cte2 as (
		select seat_id , count(seat_id) over(partition by grp order by seat_id rows between unbounded preceding and unbounded following) as cnt
		from cte
	)
select seat_id
from cte2
where cnt > 1

------------------- using self join (join based on seat_id1 = seat_id2 + 1)
with cte as (
		select c1.seat_id as seat1 ,c1.free ,c2.seat_id as seat2
		from cinema c1
		join cinema c2
		on c1.seat_id +1 = c2.seat_id
		where c1.free = 1 and c2.free = 1
)
select seat1 as consecutive_free_seat from cte
union 
select seat2 as consecutive_free_seat from cte


-------------or ( using lag - lead) - curr_free and either of prev or next_free should 1
select seat_id
from (
	select seat_id , lag(free,1) over(order by seat_id) as prev_free ,  free as curr_free , lead(free,1) over(order by seat_id) as next_free 
	from cinema
    )x
where curr_free = 1  and (prev_free = 1 or next_free = 1)  
-------------- end