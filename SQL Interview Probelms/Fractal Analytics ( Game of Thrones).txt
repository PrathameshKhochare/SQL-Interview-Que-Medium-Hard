--Interview que for Fractal Analytics
-- In this video we will discuss an advanced interview question on SQL asked in a Data Engineer interview based on Game of Thrones Database.

--Q. For each region find house which has won max no of battles. Dispaly region ,house and no of wins
Script:
-- Create the 'king' table
drop table if exists king

CREATE TABLE king (
    k_no INT PRIMARY KEY,
    king VARCHAR(50),
    house VARCHAR(50)
);

-- Create the 'battle' table
drop table if exists battle   

CREATE TABLE battle (
    battle_number INT PRIMARY KEY,
    name VARCHAR(100),
    attacker_king INT,
    defender_king INT,
    attacker_outcome INT,
    region VARCHAR(50),
    FOREIGN KEY (attacker_king) REFERENCES king(k_no),
    FOREIGN KEY (defender_king) REFERENCES king(k_no)
);

delete from king;
INSERT INTO king (k_no, king, house) VALUES
(1, 'Robb Stark', 'House Stark'),
(2, 'Joffrey Baratheon', 'House Lannister'),
(3, 'Stannis Baratheon', 'House Baratheon'),
(4, 'Balon Greyjoy', 'House Greyjoy'),
(5, 'Mace Tyrell', 'House Tyrell'),
(6, 'Doran Martell', 'House Martell');

delete from battle;
-- Insert data into the 'battle' table
INSERT INTO battle (battle_number, name, attacker_king, defender_king, attacker_outcome, region) VALUES
(1, 'Battle of Oxcross', 1, 2, 1, 'The North'),
(2, 'Battle of Blackwater', 3, 4, 0, 'The North'),
(3, 'Battle of the Fords', 1, 5, 1, 'The Reach'),
(4, 'Battle of the Green Fork', 2, 6, 0, 'The Reach'),
(5, 'Battle of the Ruby Ford', 1, 3, 1, 'The Riverlands'),
(6, 'Battle of the Golden Tooth', 2, 1, 0, 'The North'),
(7, 'Battle of Riverrun', 3, 4, 1, 'The Riverlands'),
(8, 'Battle of Riverrun', 1, 3, 0, 'The Riverlands');

--for each region find house which has won maximum no of battles. display region, house and no of wins
select * from battle;
select * from king;

select * , case when attacker_outcome = '1' then attacker_king else defender_king end as winner
from battle

-- solution 1 
-- 1st we will create cte for wins by kings , by union records where attacker wons ans records where defender wons
with wins as(
select attacker_king as king , region
from battle
where attacker_outcome = 1
union all
select defender_king as king , region
from battle
where attacker_outcome = 0
)
,cte as (
select w.region , k.house ,rank() over(partition by w.region order by count(k.house) desc) as rn ,  count(k.house) as cnt
from king k
join wins w
on k.k_no = w.king
group by w.region , k.house
)
select  region ,house ,cnt
from cte
where rn = 1

-------- solution 2 (Advance)
-- as we are joining the battle table to king table based on attacker_outcome , when attacker_outcome is 1 , join with attacker_king if 0 then join with defender_king
-- this can be achieve by case when statement in join condition

with cte as(
select b.* ,k.*
from king k
join battle b
on k.k_no = (case when attacker_outcome = 1 then attacker_king else defender_king end)
	)
	
select  region ,house , total_wins
from (
select region ,house , count(*) as total_wins
, rank() over(partition by region order by count(*) desc) as rn
from cte 
group by region ,house
	) a
where rn = 1	

------------------------ end