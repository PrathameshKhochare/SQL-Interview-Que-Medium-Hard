/* Day 8 - Merge Products
prob statement
write an sql query to merge products per customer for each day as shown in expected output
dates           products
"2024-02-18"	"101"
"2024-02-18"	"101,102"
"2024-02-18"	"102"
"2024-02-18"	"104"
"2024-02-18"	"104,105"
"2024-02-18"	"105"
"2024-02-19"	"101"
"2024-02-19"	"101,103"
"2024-02-19"	"101,106"
"2024-02-19"	"103"
"2024-02-19"	"106"
*/

drop TABLE if exists orders;
CREATE TABLE orders 
(
	customer_id 	INT,
	dates 			DATE,
	product_id 		INT
);
INSERT INTO orders VALUES
(1, '2024-02-18', 101),
(1, '2024-02-18', 102),
(1, '2024-02-19', 101),
(1, '2024-02-19', 103),
(2, '2024-02-18', 104),
(2, '2024-02-18', 105),
(2, '2024-02-19', 101),
(2, '2024-02-19', 106); 


select * from orders;



---------- we can use union and string_agg() functions
-- will separate records on dates
-- create concatanation of prod_id in sep query by using string_agg function 
-- at last we union both tables to get required output

select dates , product_id::varchar as products
from orders
---where customer_id = 1 and dates = '2024-02-18'

union 

select dates , string_agg(product_id::varchar,',') as products
from orders
--where customer_id = 1 and dates = '2024-02-18'
group by customer_id , dates

order by dates , products


-----------end